{"version":3,"sources":["karma.conf.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC1B,IAAI,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;AACpC,IAAI,UAAU,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAA;AACzD,IAAI,KAAK,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;AACxC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAChC,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAA;;AAEnD,IAAI,aAAa,GAAG,KAAK,CAAC,UAAU,EAAE;;AAEpC,QAAM,EAAE;AACN,WAAO,EAAE,KAAK,CAAC,YAAY,EAAE;GAC9B;AACD,SAAO,EAAE,oBAAoB;AAC7B,KAAG,EAAE;AACH,WAAO,EAAE;AACP,QAAE,EAAE,cAAc;KACnB;GACF;AACD,SAAO,EAAE,CACP,IAAI,OAAO,CAAC,YAAY,CAAC;AACvB,iBAAa,EAAE,OAAO,CAAC,uBAAuB,CAAC;GAChD,CAAC,CACH;CACF,CAAC;;;AAAA,AAGF,OAAO,aAAa,CAAC,KAAK;;;AAAA,AAG1B,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,MAAM,EAAE,CAAC,EAAE;AACrD,MAAI,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AAC3C,UAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAA;AAC3D,WAAO,IAAI,CAAA;GACZ;CACF,CAAC,CAAA;;AAEF,MAAM,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;AACjC,QAAM,CAAC,GAAG,CAAC;;;;;AAKT,YAAQ,EAAE,CAAC,WAAW,CAAC;AACvB,cAAU,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC;AACnC,aAAS,EAAE,CAAC,MAAM,EAAE,UAAU,CAAC;AAC/B,SAAK,EAAE,CAAC,YAAY,CAAC;AACrB,iBAAa,EAAE;AACb,kBAAY,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;KACvC;AACD,WAAO,EAAE,aAAa;AACtB,qBAAiB,EAAE;AACjB,YAAM,EAAE,IAAI;KACb;AACD,oBAAgB,EAAE;AAChB,SAAG,EAAE,YAAY;AACjB,eAAS,EAAE,CACT,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,EAC7B,EAAE,IAAI,EAAE,cAAc,EAAE,CACzB;KACF;GACF,CAAC,CAAA;CACH,CAAA","file":"karma.conf-compiled.js","sourcesContent":["// This is a karma config file. For more details see\n//   http://karma-runner.github.io/0.13/config/configuration-file.html\n// we are also using it with karma-webpack\n//   https://github.com/webpack/karma-webpack\n\nvar path = require('path')\nvar merge = require('webpack-merge')\nvar baseConfig = require('../../build/webpack.base.conf')\nvar utils = require('../../build/utils')\nvar webpack = require('webpack')\nvar projectRoot = path.resolve(__dirname, '../../')\n\nvar webpackConfig = merge(baseConfig, {\n  // use inline sourcemap for karma-sourcemap-loader\n  module: {\n    loaders: utils.styleLoaders()\n  },\n  devtool: '#inline-source-map',\n  vue: {\n    loaders: {\n      js: 'babel-loader'\n    }\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../../config/test.env')\n    })\n  ]\n})\n\n// no need for app entry during tests\ndelete webpackConfig.entry\n\n// Use babel for test files too\nwebpackConfig.module.loaders.some(function (loader, i) {\n  if (/^babel(-loader)?$/.test(loader.loader)) {\n    loader.include.push(path.resolve(projectRoot, 'test/unit'))\n    return true\n  }\n})\n\nmodule.exports = function (config) {\n  config.set({\n    // to run in additional browsers:\n    // 1. install corresponding karma launcher\n    //    http://karma-runner.github.io/0.13/config/browsers.html\n    // 2. add it to the `browsers` array below.\n    browsers: ['PhantomJS'],\n    frameworks: ['mocha', 'sinon-chai'],\n    reporters: ['spec', 'coverage'],\n    files: ['./index.js'],\n    preprocessors: {\n      './index.js': ['webpack', 'sourcemap']\n    },\n    webpack: webpackConfig,\n    webpackMiddleware: {\n      noInfo: true\n    },\n    coverageReporter: {\n      dir: './coverage',\n      reporters: [\n        { type: 'lcov', subdir: '.' },\n        { type: 'text-summary' }\n      ]\n    }\n  })\n}\n"]}