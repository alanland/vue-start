{"version":3,"sources":["utils.js"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAC1B,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AACjC,IAAI,iBAAiB,GAAG,OAAO,CAAC,6BAA6B,CAAC,CAAA;;AAE9D,OAAO,CAAC,UAAU,GAAG,UAAU,KAAK,EAAE;AACpC,MAAI,kBAAkB,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAC1D,MAAM,CAAC,KAAK,CAAC,kBAAkB,GAC/B,MAAM,CAAC,GAAG,CAAC,kBAAkB,CAAA;AACjC,SAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAA;CAClD,CAAA;;AAED,OAAO,CAAC,UAAU,GAAG,UAAU,OAAO,EAAE;AACtC,SAAO,GAAG,OAAO,IAAI,EAAE;;AAAA,AAEvB,WAAS,eAAe,CAAE,OAAO,EAAE;AACjC,QAAI,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,MAAM,EAAE;AAC/C,UAAI,cAAc,CAAA;AAClB,UAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACrB,cAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;AACzC,sBAAc,GAAG,GAAG,CAAA;OACrB,MAAM;AACL,cAAM,GAAG,MAAM,GAAG,SAAS,CAAA;AAC3B,sBAAc,GAAG,GAAG,CAAA;OACrB;AACD,aAAO,MAAM,IAAI,OAAO,CAAC,SAAS,GAAG,cAAc,GAAG,WAAW,GAAG,EAAE,CAAA,AAAC,CAAA;KACxE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;;;;AAAA,AAIZ,QAAI,OAAO,CAAC,OAAO,EAAE;AACnB,aAAO,iBAAiB,CAAC,OAAO,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAA;KACnE,MAAM;AACL,aAAO,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;KACpD;GACF;;;AAAA,AAGD,SAAO;AACL,OAAG,EAAE,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC;AAC7B,WAAO,EAAE,eAAe,CAAC,CAAC,KAAK,CAAC,CAAC;AACjC,QAAI,EAAE,eAAe,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACtC,QAAI,EAAE,eAAe,CAAC,CAAC,KAAK,EAAE,qBAAqB,CAAC,CAAC;AACrD,QAAI,EAAE,eAAe,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACtC,UAAM,EAAE,eAAe,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC1C,QAAI,EAAE,eAAe,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;GACzC,CAAA;CACF;;;AAAA,AAGD,OAAO,CAAC,YAAY,GAAG,UAAU,OAAO,EAAE;AACxC,MAAI,MAAM,GAAG,EAAE,CAAA;AACf,MAAI,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;AACzC,OAAK,IAAI,SAAS,IAAI,OAAO,EAAE;AAC7B,QAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAC/B,UAAM,CAAC,IAAI,CAAC;AACV,UAAI,EAAE,IAAI,MAAM,CAAC,KAAK,GAAG,SAAS,GAAG,GAAG,CAAC;AACzC,YAAM,EAAE,MAAM;KACf,CAAC,CAAA;GACH;AACD,SAAO,MAAM,CAAA;CACd,CAAA","file":"utils-compiled.js","sourcesContent":["var path = require('path')\nvar config = require('../config')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nexports.assetsPath = function (_path) {\n  var assetsSubDirectory = process.env.NODE_ENV === 'production'\n    ? config.build.assetsSubDirectory\n    : config.dev.assetsSubDirectory\n  return path.posix.join(assetsSubDirectory, _path)\n}\n\nexports.cssLoaders = function (options) {\n  options = options || {}\n  // generate loader string to be used with extract text plugin\n  function generateLoaders (loaders) {\n    var sourceLoader = loaders.map(function (loader) {\n      var extraParamChar\n      if (/\\?/.test(loader)) {\n        loader = loader.replace(/\\?/, '-loader?')\n        extraParamChar = '&'\n      } else {\n        loader = loader + '-loader'\n        extraParamChar = '?'\n      }\n      return loader + (options.sourceMap ? extraParamChar + 'sourceMap' : '')\n    }).join('!')\n\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract('vue-style-loader', sourceLoader)\n    } else {\n      return ['vue-style-loader', sourceLoader].join('!')\n    }\n  }\n\n  // http://vuejs.github.io/vue-loader/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(['css']),\n    postcss: generateLoaders(['css']),\n    less: generateLoaders(['css', 'less']),\n    sass: generateLoaders(['css', 'sass?indentedSyntax']),\n    scss: generateLoaders(['css', 'sass']),\n    stylus: generateLoaders(['css', 'stylus']),\n    styl: generateLoaders(['css', 'stylus'])\n  }\n}\n\n// Generate loaders for standalone style files (outside of .vue)\nexports.styleLoaders = function (options) {\n  var output = []\n  var loaders = exports.cssLoaders(options)\n  for (var extension in loaders) {\n    var loader = loaders[extension]\n    output.push({\n      test: new RegExp('\\\\.' + extension + '$'),\n      loader: loader\n    })\n  }\n  return output\n}\n"]}